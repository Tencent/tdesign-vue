// Vitest Snapshot v1

exports[`Select > :props > :bordered 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :clearable 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :creatable 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :disabled 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :labelInValue 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :loading 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :multiple 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :placeholder 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :remote 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :reserveKeyword 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select > :props > :size 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select Option > :props > :disabled 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select Option > :props > :label 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select Option > :props > :value 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Select OptionGroup > :props > :value 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;
