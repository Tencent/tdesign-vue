// Vitest Snapshot v1

exports[`Progress > :props > :color > :color is Array, equal to ["#f00", "#0ff", "#f0f"] 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :color > :color is Object, equal to { "0%": "#f00", "100%": "#0ff" } 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :color > :color is String, equal to "#aaa" 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :label > :label is String, equal to "custom label test" 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :label > :label is TNode, equal to () => "tnode" 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :label > :label is boolean, equal to false 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :label > :label is boolean, equal to true 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :percentage > :percentage is between 0 to 100, equal to 50 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :percentage > :percentage is great equal than 100, equal to 200 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :percentage > :percentage is less than 0, equal to -10 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :size > :size is Number, equal to 50 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :size > :size is String, equal to "large" 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :size > :size is String, equal to "medium" 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :size > :size is String, equal to "small" 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :status > :status is active 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :status > :status is error 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :status > :status is success 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :status > :status is warning 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :strokeWidth > :strokeWidth is Number, equal to 50 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :strokeWidth > :strokeWidth is String, equal to "50px" 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :theme > :theme circle progress has t-progress__circle-outer and t-progress__circle-inner class 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :theme > :theme line and plump progress have t-progress__inner class 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :theme > :theme line and plump progress have t-progress__inner class 2`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :theme > :theme line and plump progress have t-progress__inner class 3`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :theme > :theme line and plump progress have t-progress__inner class 4`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :theme > :theme:circle 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :theme > :theme:line 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :theme > :theme:plump 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > :props > :trackColor > :trackColor is "#aaa" 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;

exports[`Progress > pure progress contains one class 1`] = `
VueWrapper {
  "_emitted": {
    "hook:mounted": [
      [],
    ],
  },
  "_emittedByOrder": [
    {
      "args": [],
      "name": "hook:mounted",
    },
  ],
  "isFunctionalComponent": undefined,
}
`;
