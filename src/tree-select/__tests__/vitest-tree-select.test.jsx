/* eslint-disable @typescript-eslint/no-unused-vars */
/**
 * 该文件由脚本自动生成，如需修改请联系 PMC
 * This file generated by scripts of tdesign-api. `npm run api:docs TreeSelect Vue(PC) vitest,finalProject,useDefault`
 * If you need to modify this file, contact PMC first please.
 */
import { mount } from '@vue/test-utils';
import { vi } from 'vitest';
import {
  mockDelay, simulateInputChange, createElementById, simulateInputEnter,
} from '@test/utils';
import { TreeSelect } from '..';
import { getTreeSelectDefaultMount, getTreeSelectMultipleMount } from './mount';

describe('TreeSelect Component', () => {
  it('props.collapsedItems works fine', async () => {
    const wrapper = getTreeSelectMultipleMount(TreeSelect, {
      collapsedItems: (h) => <span class="custom-node">TNode</span>,
      minCollapsedNum: 3,
    });
    // await mockDelay(0);
    expect(wrapper.find('.custom-node').exists()).toBeTruthy();
  });

  it('slots.collapsedItems works fine', () => {
    const wrapper = getTreeSelectMultipleMount(TreeSelect, {
      scopedSlots: { collapsedItems: (h) => <span class="custom-node">TNode</span> },
      minCollapsedNum: 3,
    });
    expect(wrapper.find('.custom-node').exists()).toBeTruthy();
  });
  it('slots.collapsed-items works fine', () => {
    const wrapper = getTreeSelectMultipleMount(TreeSelect, {
      scopedSlots: { 'collapsed-items': (h) => <span class="custom-node">TNode</span> },
      minCollapsedNum: 3,
    });
    expect(wrapper.find('.custom-node').exists()).toBeTruthy();
  });

  it('props.collapsedItems is a function with params', () => {
    const fn = vi.fn();
    getTreeSelectMultipleMount(TreeSelect, { collapsedItems: fn, minCollapsedNum: 3 });
    expect(fn).toHaveBeenCalled();
    expect(fn.mock.calls[0][1].count).toBe(5);
  });
  it('slots.collapsedItems: a function with params', () => {
    const fn = vi.fn();
    getTreeSelectMultipleMount(TreeSelect, { scopedSlots: { collapsedItems: fn }, minCollapsedNum: 3 });

    expect(fn).toHaveBeenCalled();
    expect(fn.mock.calls[0][0].count).toBe(5);
  });
});
